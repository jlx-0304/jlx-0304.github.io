{"meta":{"title":"朝闻道","subtitle":"廉价的假设,昂贵的宇宙","description":"时间移民","author":"Da Long","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"给李璇的,第三次生日祝福","slug":"JLX","date":"2020-03-02T15:58:20.000Z","updated":"2020-03-03T15:58:26.609Z","comments":true,"path":"2020/03/02/JLX/","link":"","permalink":"http://yoursite.com/2020/03/02/JLX/","excerpt":"记录背景因为疫情的关系，原定的开学日期被延迟，目前在家，混吃混喝，白天网课，晚上跟着爸妈看电视剧，日子过得还算舒心，后天是李璇生日，也没什么计划，但是心里头总是记着这件事，明天满课，趁今晚就把博客更了，免得明天时间调不过来","text":"记录背景因为疫情的关系，原定的开学日期被延迟，目前在家，混吃混喝，白天网课，晚上跟着爸妈看电视剧，日子过得还算舒心，后天是李璇生日，也没什么计划，但是心里头总是记着这件事，明天满课，趁今晚就把博客更了，免得明天时间调不过来 闲话上大学后，一个人的时候总喜欢想以前的事，有时候突然想起你来，会有一种很神奇的感觉，就像做梦，梦到回到了高中，梦到快考试了，咱们在上晚自习，然后我们两在最后一排，我们在说十宗罪，那种感觉特别真实，连快考试的那种焦虑都能感觉到，但具体是什么感觉，我自己也说不上，反正每次想到你，总是会突然觉得挺开心的，哈哈.. 有关你的记忆总感觉想幻灯片一样，一块一块的，只记得一件一件的事，事前事后发生了什么都记不清了，第一次见你是你刚来15班，你上去做自我介绍，记不得你当时说了什么，但感觉你挺高冷的，印象中你那天穿了一件格子衬衫，记不得第一次跟你说话是什么时候，也记不起来我们怎么加上的qq,只知道跟你慢慢熟了起来，第一天给人的那种高冷的感觉保持的时间极短，熟了之后觉得你是个极有趣的人，记得有段时间咱们是前后桌，还有晚自习咱们也经常一起上，偶尔还会跟你坐一起，听你讲你&quot;追&quot;赵飞的英勇事迹，还有你以前的事，也不知道以后还有没有机会，再像高中时那样坐你边上，听你讲你和李健的故事 刚上大学那会，每天碰到什么新鲜事，都想跟你说说，后来慢慢的刚来的新鲜劲都没了，日子开始变得枯燥起来，每天都是上课吃饭睡觉，跟别人的联系也越来越少，除了跟舍友，班上同学也接触的不多，逐渐油腻起来，哈哈哈哈 第一次是在晚自习，我感觉你挺喜欢看书的，就想着送你一本书，周末还专门去新华书店转了一会，也不知道你平时读的什么书，就乱选，我记得当时最后选的那本书好像是叫安静还是什么，当时晚自习我过去给你书，给你说生日快乐，结果你说你生日早过了，我当时尴尬死了，就说是阴历的生日，你又说阴历的也不对，我太难了，你还说，我送你这本书，是不是嫌你吵... 我当时真的特别后悔选了那本书，也不知道你后来再有没有看过，第二次只是在qq上简单的问候了下，这次想着写一篇博客，也没什么实质性的礼物，就当唠嗑了，之前申请github账号时，突发奇想就拿你生日做了账号，毕竟之前记错你生日实在是尴尬了正话","categories":[],"tags":[]},{"title":"配置MySQL","slug":"配置MySQL","date":"2020-02-18T04:54:00.000Z","updated":"2020-03-03T15:23:31.038Z","comments":true,"path":"2020/02/18/配置MySQL/","link":"","permalink":"http://yoursite.com/2020/02/18/%E9%85%8D%E7%BD%AEMySQL/","excerpt":"记录背景今年这个年过得确实特别，刚放假的时候还好好的，回家没几天武汉就传出了肺炎疫情，从消息传出到武汉封城，再到全国范围的管控，事态的发展远远超出了我的预期，甚至刚传出疫情的消息时，我还在计划着和同学的聚餐吃火锅还是大菜；大年初一到初三在老家过的还算自在，全家难得聚这么齐，那几天县城传出了已经有武汉返乡人员感染了新冠肺炎，我们就打消了返回县城的打算，隔几天就去县城采购食物顺带洗个澡就继续回乡下，管控力度一天比一天强，从通知禁止外村人进入，限制本村人出行到村口派人值班登记出入人员，小区入驻政府人员，再到禁止汽车入村，只出不进；老哥的在北京的工作也因为疫情的原因推迟，改为在家办公，而我也延迟开学，目前在学校安排的平台上接收网上授课，不知何时才能开学","text":"记录背景今年这个年过得确实特别，刚放假的时候还好好的，回家没几天武汉就传出了肺炎疫情，从消息传出到武汉封城，再到全国范围的管控，事态的发展远远超出了我的预期，甚至刚传出疫情的消息时，我还在计划着和同学的聚餐吃火锅还是大菜；大年初一到初三在老家过的还算自在，全家难得聚这么齐，那几天县城传出了已经有武汉返乡人员感染了新冠肺炎，我们就打消了返回县城的打算，隔几天就去县城采购食物顺带洗个澡就继续回乡下，管控力度一天比一天强，从通知禁止外村人进入，限制本村人出行到村口派人值班登记出入人员，小区入驻政府人员，再到禁止汽车入村，只出不进；老哥的在北京的工作也因为疫情的原因推迟，改为在家办公，而我也延迟开学，目前在学校安排的平台上接收网上授课，不知何时才能开学 前言数据库系统是这学期新开的一门专业课，目前对这门课程的理解有限，就先不做介绍了等以后有一定理解后再补充，在正式开课前老师给了我们两个压缩包一个是MySQL，另一个是可视化MySQL的一个工具，安装比较简单，主要就是安装完之后需要为MySQL配置环境变量，因为之前配置过JDK，在自建博客的时候也被魔鬼般的配置环境变量折磨过，所以这次并没有遇到太大的困难，但是好多之前没有配置过的同学碰到了各种各样的错误，所以就打算借此机会更新一篇关于如何配置MySQL的博客，希望可以帮助到现在还没配好的同学；准备工作在开始一切之前,你必须已经:1. 从官网下载合适版本的MySQl; 2. 了解如何用管理员打开cmd; 3. 掌握基本的linux命令;本文所使用的环境:- windows10.0 - MySQL 5.7.22解压MySQL1. 将 MySQL 压缩包解压到自己想要的位置，小白建议默认路径 2. 与 mysql 5.6 不同的是 5.7 版本中没有 data 文件夹和my-default.ini 文件 配置my.ini1. my.ini 是 MySQL 数据库中使用的配置文件，修改这个文件可以达到更新配置的目的 2. 在 ..\\mysql-5.7.22-winx64 下，新建 my.ini 文件，文件内容为： [mysql] default-character-set=utf8 # 设置 mysql 客户端默认字符集 [mysqld] port = 3306 #设置 3306 端口 basedir=F:\\devtools\\mysql-5.7.22-winx64 # 设置 mysql 的安装目录 datadir=F:\\devtools\\mysql-5.7.22-winx64\\data # 设置 mysql 数据库的数据的存放目录 max_connections=200 # 允许最大连接数 character-set-server=utf8 # 服务端使用的字符集默认为 8 比特编码的 latin1 字符集 default-storage-engine=INNODB # 创建新表时将使用的默认存储引擎安装 mysql 服务1. 以管理员身份打开 cmd 窗口，将目录切换到 mysql 安装文件夹下的 bin 目录下 2. 执行 mysqld install初始化 mysql 数据库1. bin 目录下，输入 mysqld --initialize --user=root --console 2. 找到提示语句中的locallhost：*****,信号内容为root用户的密码启动 mysql 服务1. bin 目录下，net start mysql 启动服务修改 root 密码1. bin 目录下，mysql -uroot -p，输入初始化 root 密码登录 2. 然后通过 set password=password(&apos;123456&apos;); 修改密码安装 Navicat Premium1. navicat 是一个用来可视化MySQL的工具卸载[用于安装失败，需要重新安装时]1. 关闭服务,以管理员身份运行 cmd，执行命令： net stop mysql 2. 移除服务,mysqld -remove [服务名] 3. 删除文件 4. 清除注册表中的该 MySQL 服务，如下: a、HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Services\\Eventlog\\Application\\MySQL b、HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet002\\Services\\Eventlog\\Application\\MySQL c、HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Eventlog\\Application\\MySQL错误处理1. 新建 my.ini 文件失败 解决办法： 在创建 my.ini 文件时，创建好后，点击创建的 my.ini 文件，点击文件→选项→查看，然后把其中的隐藏已知文件类型的扩展名取消勾选，然后再将文件重命名更改扩展名 2. 执行 mysqld install 出现 The service already exists! 解决办法：重新以管理员身份运行 cmd，先输入sc query mysql 回车，在输入 sc delete mysql 回车，然后重新执行 mysqld install 3. 执行 mysqld --initialize --user=root --console 步骤时，若出现 [ERROR]Can&apos;t find error-message file D:\\**\\mysql 解决办法：重新配置 my.ini 文件将 basedir 后的路径改为 mysql 的安装路径，datadir 后为数据库的数据存放目录，设置在 mysql 安装目录下[注意配置后记得回头检查下配置内容格式是否正确，尤其是记得将注释内容放到#号后面，并且是在同一行，不能换行！！！] 4. 执行 mysqld --initialize --user=root –console 步骤时，若出现 [ERROR]--initialize specified but the data directory has files in it.Aborting. 解决办法：找到 mysql 安装目录下存放数据库数据的 data 文件夹，删除里面的内容，保留文件夹 5. 执行 net start mysql 步骤时，若出现 MySQL 服务正在启动 MySQL 服务无法启动。 服务没有报告任何错误。 解决办法：删除data文件夹[就是上文的data]，重新以管理员身份运行 cmd，从第一步开始配置。 6. 执行 行 mysql -uroot -p 步骤后，root密码输入错误，出现 You have an error in your SQL syntax; 解决办法：连续回车回车两次，继续输入密码。 7. 安装过程出现 由于找不到MSVCR120.dll，无法继续执行代码，重新安装重新可能会解决此问题 解决办法: https://www.microsoft.com/zh-cn/download/confirmation.aspx?id=40784,到此网站下载组件","categories":[],"tags":[]},{"title":"赫夫曼编码的实现","slug":"赫夫曼编码","date":"2020-01-20T06:37:10.000Z","updated":"2020-03-03T15:23:54.464Z","comments":true,"path":"2020/01/20/赫夫曼编码/","link":"","permalink":"http://yoursite.com/2020/01/20/%E8%B5%AB%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81/","excerpt":"记录背景上次更博已经是四个月之前的事了，这次放假总算是有了点时间来更一篇博客，长时间没写，一动手突然发现连Markdown语法都忘光了，只能边看笔记边写了，到目前为止手上也有了几个像样的小项目，这次先把之前的写的基于赫夫曼树，生成赫夫曼编码的代码总结一下：","text":"记录背景上次更博已经是四个月之前的事了，这次放假总算是有了点时间来更一篇博客，长时间没写，一动手突然发现连Markdown语法都忘光了，只能边看笔记边写了，到目前为止手上也有了几个像样的小项目，这次先把之前的写的基于赫夫曼树，生成赫夫曼编码的代码总结一下： 正文这学期新开的数据结构让我接触到了不少简单的算法，因为课时有限，好多算法我们并没有要求实现代码，只要掌握算法含义即可，但是这也是不得以而为之，有空还是得将代码实现出来，这样才能将知识吸收，本文中的赫夫曼树的算法是课本中的经典算法，课本中已经将核心思路的伪代码给出，我只需要在完全理解算法的基础上将代码补齐就OK了; 代码: #include&lt;stdio.h&gt; #include&lt;stdlib.h&gt; #include&lt;string.h&gt; #define MAX 100 #define inf 2000000000//最大的权值 typedef struct { int weight;//权值 int parent, lchild, rchild;//父节点，孩子结点的权值 }HTNode, *HuffmanTree; typedef char * * HuffmanCode;//二维字符数组 void Select(HuffmanTree HT, int x, int *s1, int *s2) { //选出无父结点，并且权值最小的两个结点，赋值给s1，s2 int i; int min1 = inf, min2 = inf;//初始化为极大的权值 for (i = 1; i &lt;= x; i++) { //找权值最小的结点位序 if (HT[i].weight &lt; min1 &amp;&amp; HT[i].parent == 0) { min1 = HT[i].weight;//赋权值 *s1 = i;//赋位序 } } for (i = 1; i &lt;= x; i++) { //找权值次小的结点位序 if (HT[i].weight &lt; min2 &amp;&amp; i != *s1 &amp;&amp; HT[i].parent == 0) { min2 = HT[i].weight;//赋权值 *s2 = i;//赋位序 } } } void HuffmanCoding(HuffmanTree *HT, HuffmanCode *HC, int *w, int n) { //w存放n个字符的权值，构建赫夫曼树HT,求n个字符的赫夫曼编码存在二维字符数组HC中 if (n &lt;= 1) return; int i; int m = 2 * n - 1;//n个叶子，有2*n-1个结点 *HT = (HuffmanTree)malloc((m + 1)*sizeof(HTNode));//给树开辟空间，0号单元未用 HuffmanTree p;//树指针 for (p = *HT + 1, i = 1; i &lt;= n; i++, p++, w++) { //叶子结点赋权值并初始化 p-&gt;weight = *w; p-&gt;parent = 0; p-&gt;lchild = 0; p-&gt;rchild = 0; } for (; i &lt;= m; i++, p++) { //非叶子结点初始化 p-&gt;weight = 0; p-&gt;parent = 0; p-&gt;lchild = 0; p-&gt;rchild = 0; } for (i = n + 1; i &lt;= m; i++) { int s1, s2;//最小的两个结点 Select(*HT, i - 1, &amp;s1, &amp;s2);//在HT[1...i-1]中选出parent为0且weight最小的两个结点，用s1和s2表示 (*HT)[s1].parent = i; (*HT)[s2].parent = i;//认爸爸 (*HT)[i].lchild = s1; (*HT)[i].rchild = s2;//认儿子 (*HT)[i].weight = (*HT)[s1].weight + (*HT)[s2].weight;//给爸赋权值 } //----------下面是将每个结点的赫夫曼编码存入二维字符数组 *HC = (HuffmanCode)malloc((n + 1)*sizeof(char *));//申请一段以HC为首地址的内存，可以看成二维字符数组 ，这里先申请了第一维 char *cd = (char *)malloc(n*sizeof(char));//申请一段临时工作空间(大于实际所需空间) cd[n - 1] = &apos;\\0&apos;;//编码结束符 for (i = 1; i &lt;= n; i++)//逐个字符求赫夫曼编码 { int start = n - 1; int c, f;//孩子和父亲 for (c = i, f = (*HT)[i].parent; f != 0; c = f, f = (*HT)[f].parent) { //从叶子到根逆向求编码 if ((*HT)[f].lchild == c)//如果当前结点是父节点的左孩子，则存一个&apos;0&apos; cd[--start] = &apos;0&apos;; else cd[--start] = &apos;1&apos;;//反之存一个&apos;1&apos; } (*HC)[i] = (char *)malloc((n - start)*sizeof(char));//申请第二维,为第i个字符编码分配空间 strcpy((*HC)[i], &amp;cd[start]);//将编码从工作空间存入赫夫曼编码表中 } free(cd);//释放临时空间 //for (int i = 1; i &lt;= n; i++) // printf(&quot;权值为%d的结点的赫夫曼编码为：%s\\n&quot;, HT[i].weight, HC[i]); } void main() { HuffmanTree HT;//树的首地址 HuffmanCode HC;//二维数组的首地址 int n; int w[MAX];//w存结点的权值 printf(&quot;输入结点的个数:\\n&quot;); scanf(&quot;%d&quot;, &amp;n); printf(&quot;输入每个结点的权值:\\n&quot;); for (int i = 0; i&lt;n; i++) scanf(&quot;%d&quot;, &amp;w[i]); HuffmanCoding(&amp;HT, &amp;HC, w, n);//传入树，编码数组，权值数组的首地址和结点个数 for (int i = 1; i &lt;= n; i++) printf(&quot;权值为%d的结点的赫夫曼编码为：%s\\n&quot;, HT[i].weight, HC[i]); system(&quot;pause&quot;); }总结在对结构体数组初始化数值时遵循以下格式: strcut xx { int xx; char xx[]; char xx; }stu[3]= { {1,&quot;xx&quot;,x},{2,&quot;xx&quot;,x},{3,&quot;xx&quot;,x} };","categories":[],"tags":[]},{"title":"hexo主题优化","slug":"hexo主题优化","date":"2019-09-07T12:46:20.000Z","updated":"2020-02-29T15:15:06.737Z","comments":true,"path":"2019/09/07/hexo主题优化/","link":"","permalink":"http://yoursite.com/2019/09/07/hexo%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/","excerpt":"记录背景没能在博客搭建完成后的第一时间优化主题，实在是罪过，那个陌生的名字就像是一双眼睛，无时不刻都在羞辱着我，是可忍，孰不可忍，趁着周末，赶紧把这玩意给优化了，把我大龙哥的名号给挂上去，当然最重要的还是我的收款码喽，嘿嘿，期待各位大佬们打赏，支付宝微信都支持偶","text":"记录背景没能在博客搭建完成后的第一时间优化主题，实在是罪过，那个陌生的名字就像是一双眼睛，无时不刻都在羞辱着我，是可忍，孰不可忍，趁着周末，赶紧把这玩意给优化了，把我大龙哥的名号给挂上去，当然最重要的还是我的收款码喽，嘿嘿，期待各位大佬们打赏，支付宝微信都支持偶 正文本次版本更新主要优化了一下内容： 1. 换上了一个超级霸气的头像 2. 大龙哥强势上位 3. 添加了github网址 4. 添加了我的知乎主页 5. 添加了我的B站主页 6. 添加了我的微博主页 7. 上传了我的个人收款码 8. 这个随笔的功能目前还没搞懂补充首先通过这几日的学习，确实感受到了技术的发展对生活的影响，技术小白在此致敬各位前辈大佬们，感谢你们开发出平台，给了我学习的机会.参考https://godweiyang.com/2018/04/13/hexo-blog/","categories":[],"tags":[]},{"title":"结构体数组的初始化","slug":"结构体数组的初始化","date":"2019-09-05T15:20:44.000Z","updated":"2020-03-03T15:24:47.524Z","comments":true,"path":"2019/09/05/结构体数组的初始化/","link":"","permalink":"http://yoursite.com/2019/09/05/%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96/","excerpt":"记录背景今天数据结构课上老师布置了一个小作业,要求我们用顺序结构储存一组学生数据,这个问题从逻辑上来说应该是很简单的,但是因为好久没接触C语言了,在实现代码的时候遇到了各种各样的问题,所以在解决问题后,我觉得有必要进行一次总结:","text":"记录背景今天数据结构课上老师布置了一个小作业,要求我们用顺序结构储存一组学生数据,这个问题从逻辑上来说应该是很简单的,但是因为好久没接触C语言了,在实现代码的时候遇到了各种各样的问题,所以在解决问题后,我觉得有必要进行一次总结: 正文因为老师要求使用顺序结构来储存学生数据,所以选择用数组来储存学生元素,考虑到学生元素数据项类型不统一,故选择使用结构体来储存元素中的数据项,总体来说就是采用结构体数组来储存学生信息. 代码: #include&lt;stdio.h&gt; void main() { struct stu { char name[12]; char sign[10]; char sex[4]; int age; char room[10]; char health[4]; }s[6]={ {&quot;王小林&quot;,&quot;790631&quot;,&quot;女&quot;,35,&quot;计科1&quot;,&quot;好&quot;}, {&quot;张小二&quot;,&quot;790632&quot;,&quot;男&quot;,28,&quot;计科2&quot;,&quot;良&quot;}, {&quot;李小三&quot;,&quot;790632&quot;,&quot;女&quot;,31,&quot;计科2&quot;,&quot;良&quot;}, {&quot;梁小四&quot;,&quot;790633&quot;,&quot;女&quot;,22,&quot;计科1&quot;,&quot;好&quot;}, {&quot;曾小五&quot;,&quot;790634&quot;,&quot;男&quot;,18,&quot;计科1&quot;,&quot;好&quot;}, {&quot;狄小六&quot;,&quot;790635&quot;,&quot;女&quot;,26,&quot;计科2&quot;,&quot;良&quot;} }; int i; for(i=0;i&lt;6;i++) { printf(&quot;%s\\t&quot;,s[i].name); printf(&quot;%s\\t&quot;,s[i].sign); printf(&quot;%s\\t&quot;,s[i].sex); printf(&quot;%d\\t&quot;,s[i].age); printf(&quot;%s\\t&quot;,s[i].room); printf(&quot;%s\\n&quot;,s[i].health); } }总结在对结构体数组初始化数值时遵循以下格式: strcut xx { int xx; char xx[]; char xx; }stu[3]= { {1,&quot;xx&quot;,x},{2,&quot;xx&quot;,x},{3,&quot;xx&quot;,x} };","categories":[],"tags":[]},{"title":"使用hexo+github搭建M免费个人博客","slug":"我的博客","date":"2019-09-03T09:58:31.000Z","updated":"2020-02-19T09:59:34.078Z","comments":true,"path":"2019/09/03/我的博客/","link":"","permalink":"http://yoursite.com/2019/09/03/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/","excerpt":"前言这个基于hexo+githubde搭建的博客,是我暑假期间了解到的,虽然搭建过程并不是特别复杂,但在搭建过程中我依然遇到了许多问题,今天这篇博文主要用来记录一下我搭建这个博客的过程以及遇到的一些问题，也希望这篇博文能帮到还没有搭建成功的同学;","text":"前言这个基于hexo+githubde搭建的博客,是我暑假期间了解到的,虽然搭建过程并不是特别复杂,但在搭建过程中我依然遇到了许多问题,今天这篇博文主要用来记录一下我搭建这个博客的过程以及遇到的一些问题，也希望这篇博文能帮到还没有搭建成功的同学; 准备工作在开始一切之前,你必须已经:1. 注册一个github账号; 2. 安装git for windows，掌握基本的linux命令; 3. 安装node.js以及npm，并了解相关知识; 4. 自学markdown语法;本文所使用的环境:- windows10.0 - git@2.22.0 - node.js@10.16.3 - npm@6.9.0 - hexo-cli@2.0.0搭建github1. 创建一个github仓库 进入github官网并登陆已注册的账号,新建一个名为&quot;用户名.github.io&quot; 的仓库,将来你的网站访问地址就是[http://用户名.gothub.io]了; 2. 绑定域名 绑定域名并不是必须的,需要的同学请自行百度,没钱的直接跳过就好了[hhh]; 3. 配置SSH key 想要将本地的代码提交到服务器,SSH key是必须的,你可以把它理解成本地和远端的钥匙;使用hexo写博客1. hexo 简介 Hexo是一个简单,快速,强大的基于&quot;Github Pages&quot;的博客发布工具,支持Markdown格式,有众多优秀插件和主题; 2. 安装hexo 用windows的cmd或者git bash输入: &amp; npm install -g hexo 5. 初始化博客 新建一个文件夹,这个文件夹是用来存放代码的,最好放在一个方便寻找的地方; 在该目录下用命令行输入: &amp; hexo init 之后hexo会自动下载一些文件到这个目录 &amp; hexo g //生成静态页面 &amp; hexo s //在服务器运行 之后,hexo就会在public文件夹生成相关html文件,这些文件将来都是要提交到github去的; hexo s是开启本地预览服务,在本地浏览器访问[http://localhost:4000]即可看到内容; 6. 上传到github 在刚才新建的文件夹下找到_config.yml,用记事本打开后将最底下的deploy修改为: type: git repository: https://github.com/jlx-0304/jlx-0304.github.io.git branch: master 然后退回文件夹最外层,安装一个插件: &amp; npm install hexo-deployer-git --save 一切配置完成后,只需一句: &amp; hexo d 之后再浏览器输入&quot;用户名.github.io&quot;便可以看到你的博客了; 7. 写博客 在hexo根目录下,执行: &amp; hexo new &quot;博文名&quot; 之后hexo会帮我们在_posts下生成相关md文件,打开就可以使用markdown语法编辑文本了;npm 切换到淘宝源1. 全局配置切换到淘宝源 npm config set registry https://registry.npm.taobao.org 2. 全局配置切换到官方源 npm config set registry https://www.npmjs.org 3. 检测是否切换到了淘宝源 npm info underscore","categories":[],"tags":[]}]}